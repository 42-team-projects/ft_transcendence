version: '3.8'

services:
  web:
    build: .
    container_name: django
    volumes:
      - ./backend/:/app
    ports:
      - "8000:8000"
    networks:
      - ft_transcendence

  chat:
    build:
      dockerfile: ChatDockerfile
    container_name: chat
    volumes:
      - ./myproject/:/app
    ports:
      - "9000:8000"
    networks:
      - ft_transcendence

  front-end:
    container_name: front-end
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./frontend/:/usr/share/nginx/html
    networks:
      - ft_transcendence
    depends_on:
      - web
      - chat

networks:
  ft_transcendence:
    
# volumes:
#     frontend:
#       name: "frontend"
#       driver_opts:
#         type: none
#         o: bind
#         device: "./frontend"

    # backend:
    #   name: "backend"
    #   driver_opts:
    #     type: none
    #     o: bind
    #     device: "$HOME/Desktop/42cursus/ft_transcendence/backend/"

    # myproject:
    #   name: "myproject"
    #   driver_opts:
    #     type: none
    #     o: bind
    #     device: "$HOME/Desktop/42cursus/ft_transcendence/myproject/"
# services:
#   db:
#     image: postgres
#     ports:
#       - 5432:5432
#     container_name: postgres
#     environment:
#       - POSTGRES_DB=djangodb
#       - POSTGRES_USER=ogorfti
#       - POSTGRES_PASSWORD=1337
# # to visualize the database you need to add a server with postgre container ip
#   pgadmin4:
#     image: dpage/pgadmin4
#     ports:
#       - 5050:80 # 
#     container_name: pgadmin4
#     environment:
#       - PGADMIN_DEFAULT_EMAIL=jodegi7270@hutov.com
#       - PGADMIN_DEFAULT_PASSWORD=hutov
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #   container_name: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./frontend:/usr/share/nginx/html
# networks:
#   default:
#     driver: bridge
#     name: my-network
